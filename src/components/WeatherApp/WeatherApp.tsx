import React, { useState, useEffect } from "react";

interface WeatherData {
  temperature: number;
  description: string;
  city: string;
  country: string;
}

function WeatherApp() {
  const [city, setCity] = useState<string>(""); // Th√†nh ph·ªë nh·∫≠p v√†o
  const [weather, setWeather] = useState<WeatherData | null>(null); // D·ªØ li·ªáu th·ªùi ti·∫øt
  const [error, setError] = useState<string | null>(null); // B·∫Øt l·ªói t·ª´ API ho·∫∑c validation

  // H√†m l·∫•y d·ªØ li·ªáu th·ªùi ti·∫øt
  const fetchWeather = async (cityName: string) => {
    const apiKey = "YOUR_API_KEY"; // ƒêƒÉng k√Ω t·∫°i https://openweathermap.org/api ƒë·ªÉ l·∫•y API key
    const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&units=metric&appid=${apiKey}`;
    try {
      setError(null); // X√≥a l·ªói tr∆∞·ªõc khi g·ªçi API
      const response = await fetch(apiUrl);
      if (!response.ok) throw new Error("Kh√¥ng t√¨m th·∫•y th√†nh ph·ªë!");
      const data = await response.json();
      setWeather({
        temperature: data.main.temp,
        description: data.weather[0].description,
        city: data.name,
        country: data.sys.country,
      });
    } catch (err: any) {
      setError(err.message);
      setWeather(null); // Reset weather n·∫øu c√≥ l·ªói
    }
  };

  // L·∫Øng nghe th√†nh ph·ªë (khi nh·∫•n "T√¨m ki·∫øm")
  const handleSearch = () => {
    if (city.trim() === "") {
      setError("Vui l√≤ng nh·∫≠p t√™n th√†nh ph·ªë!");
      return;
    }
    fetchWeather(city);
  };

  return (
    <div className="weather-container">
      <h2>üå§Ô∏è ·ª®ng d·ª•ng Th·ªùi ti·∫øt</h2>
      <div className="weather-form">
        <input
          type="text"
          placeholder="Nh·∫≠p t√™n th√†nh ph·ªë..."
          value={city}
          onChange={(e) => setCity(e.target.value)}
        />
        <button onClick={handleSearch}>T√¨m ki·∫øm</button>
      </div>
      {error && <p className="error">{error}</p>}
      {weather && (
        <div className="weather-info">
          <h3>
            {weather.city}, {weather.country}
          </h3>
          <p>Nhi·ªát ƒë·ªô: {weather.temperature}¬∞C</p>
          <p>Th·ªùi ti·∫øt: {weather.description}</p>
        </div>
      )}
    </div>
  );
}

export default WeatherApp;